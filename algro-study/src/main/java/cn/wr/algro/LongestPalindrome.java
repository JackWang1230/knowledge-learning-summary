package cn.wr.algro;

/**
 * @author RWang
 * @Date 2022/1/13
 */

public class LongestPalindrome {

    /**
     *
     给你一个字符串 s，找到 s 中最长的回文子串。

     输入：s = "babad"
     输出："bab"
     解释："aba" 同样是符合题意的答案。

     输入：s = "cbbd"
     输出："bb"

     输入：s = "a"
     输出："a"

     输入：s = "ac"
     输出："a"
     * @param s
     * @return
     */
    public boolean isPalindromic(String s) {
        int len = s.length();
        for (int i = 0; i < len / 2; i++) {
            if (s.charAt(i) != s.charAt(len - i - 1)) {
                return false;
            }
        }
        return true;
    }

    // 暴力解法
    public String longestPalindrome(String s) {
        String ans = "";
        int max = 0;
        int len = s.length();
        for (int i = 0; i < len; i++)
            for (int j = i + 1; j <= len; j++) {
                String test = s.substring(i, j);
                if (isPalindromic(test) && test.length() > max) {
                    ans = s.substring(i, j);
                    max = Math.max(max, ans.length());
                }
            }
        return ans;
    }

    public static void main(String[] args) {

        String s = new LongestPalindrome().
                longestPalindrome
        System.out.println(s);
    }
}
